unit mEndereco;

interface

uses files.interfaces, System.JSON, XMLDoc;

type
  TEndereco = class(TInterfacedObject, iFiles)
  private
    FCodigo: Integer;
    FCEP: String;
    FLogradouro: String;
    FComplemento: String;
    FBairro: String;
    FLocalidade: String;
    FUF: String;
  public
    function toJSON: TJSONObject;
    function toXML: TXMLDocument;
    function fromJSON: TObject;
    function fromXML: TObject;
  published
    property Codigo: Integer read FCodigo write FCodigo;
    property CEP: String read FCEP write FCEP;
    property Logradouro: String read FLogradouro write FLogradouro;
    property Complemento: String read FComplemento write FComplemento;
    property Bairro: String read FBairro write FBairro;
    property Localidade: String read FLocalidade write FLocalidade;
    property UF: String read FUF write FUF;
  end;

implementation

{ TEndereco }

function TEndereco.fromJSON: TObject;
begin

end;

function TEndereco.fromXML: TObject;
begin

end;

function TEndereco.toJSON: TJSONObject;
begin
  Result := TJSONObject.Create;

  try
    Result.AddPair('cep', endereco.CEP);
    Result.AddPair('logradouro', endereco.Logradouro);
    Result.AddPair('complemento', endereco.Complemento);
    Result.AddPair('bairro', endereco.Bairro);
    Result.AddPair('localidade', endereco.Localidade);
    Result.AddPair('uf', endereco.UF);
  except
    on e: Exception do
    begin
      raise Exception.Create('Objeto inválido!' + #13 + 'Mensagem do erro: ' +
        e.Message);
    end;
  end;

function TEndereco.toXML: TXMLDocument;
begin

end;

end.
